<?xml version="1.0" encoding="UTF-8"?>
<project name="Targo_tap" default="help">
  <property file="local.properties" />
  <property file="ant.properties" />
  <property environment="env" />
  <condition property="sdk.dir" value="${env.ANDROID_HOME}">
       <isset property="env.ANDROID_HOME" />
  </condition>
  <property name="ecj.jar" value="C:\Users\Lokio\Documents\processing-3.0a5\tools/../modes/java/mode/ecj.jar" />
  <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
  <mkdir dir="bin" />
  <echo message="${ecj.jar}" />
  <echo message="${build.compiler}" />
    <target name="-compile" depends="-pre-build, -build-setup, -code-gen, -pre-compile">
        <do-only-if-manifest-hasCode elseText="hasCode = false. Skipping...">
            <path id="project.javac.classpath">
                <path refid="project.all.jars.path" />
                <path refid="tested.project.classpath" />
                <path path="${java.compiler.classpath}" />
            </path>
            <javac encoding="${java.encoding}"
                    source="${java.source}" target="${java.target}"
                    debug="true" extdirs="" includeantruntime="false"
                    destdir="${out.classes.absolute.dir}"
                    bootclasspathref="project.target.class.path"
                    verbose="${verbose}"
                    classpathref="project.javac.classpath"
                    fork="${need.javac.fork}">
                <src path="${source.absolute.dir}" />
                <src path="${gen.absolute.dir}" />
                <compilerarg line="${java.compilerargs}" />
                <compilerclasspath path="${ecj.jar}" />
            </javac>
            <if condition="${build.is.instrumented}">
                <then>
                    <echo level="info">Instrumenting classes from ${out.absolute.dir}/classes...</echo>
                    <getemmafilter
                            appPackage="${project.app.package}"
                            libraryPackagesRefId="project.library.packages"
                            filterOut="emma.default.filter"/>
                    <property name="emma.coverage.absolute.file" location="${out.absolute.dir}/coverage.em" />
                    <emma enabled="true">
                        <instr verbosity="${verbosity}"
                               mode="overwrite"
                               instrpath="${out.absolute.dir}/classes"
                               outdir="${out.absolute.dir}/classes"
                               metadatafile="${emma.coverage.absolute.file}">
                            <filter excludes="${emma.default.filter}" />
                            <filter value="${emma.filter}" />
                        </instr>
                    </emma>
                </then>
            </if>
            <if condition="${project.is.library}">
                <then>
                    <echo level="info">Creating library output jar file...</echo>
                    <property name="out.library.jar.file" location="${out.absolute.dir}/classes.jar" />
                    <if>
                        <condition>
                            <length string="${android.package.excludes}" trim="true" when="greater" length="0" />
                        </condition>
                        <then>
                            <echo level="info">Custom jar packaging exclusion: ${android.package.excludes}</echo>
                        </then>
                    </if>
                    <propertybyreplace name="project.app.package.path" input="${project.app.package}" replace="." with="/" />
                    <jar destfile="${out.library.jar.file}">
                        <fileset dir="${out.classes.absolute.dir}"
                                includes="**/*.class"
                                excludes="${project.app.package.path}/R.class ${project.app.package.path}/R$*.class ${project.app.package.path}/BuildConfig.class"/>
                        <fileset dir="${source.absolute.dir}" excludes="**/*.java ${android.package.excludes}" />
                    </jar>
                </then>
            </if>
        </do-only-if-manifest-hasCode>
    </target>
  <loadproperties srcFile="project.properties" />
  <fail message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'" unless="sdk.dir" />
  <import file="custom_rules.xml" optional="true" />
  <!-- version-tag: 1 -->
  <import file="${sdk.dir}/tools/ant/build.xml" />
</project>
